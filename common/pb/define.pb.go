// Code generated by protoc-gen-go. DO NOT EDIT.
// source: define.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	define.proto
	game_msg.proto
	framework_msg.proto

It has these top-level messages:
	NodeRegisterReq
	NodeRegisterAck
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MsgID int32

const (
	MsgID_INVALID               MsgID = 0
	MsgID_FWM_NODE_REGISTER_REQ MsgID = 1
	MsgID_FWM_NODE_REGISTER_ACK MsgID = 2
)

var MsgID_name = map[int32]string{
	0: "INVALID",
	1: "FWM_NODE_REGISTER_REQ",
	2: "FWM_NODE_REGISTER_ACK",
}
var MsgID_value = map[string]int32{
	"INVALID":               0,
	"FWM_NODE_REGISTER_REQ": 1,
	"FWM_NODE_REGISTER_ACK": 2,
}

func (x MsgID) String() string {
	return proto.EnumName(MsgID_name, int32(x))
}
func (MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type NODE_TYPE int32

const (
	NODE_TYPE_MACHINE NODE_TYPE = 0
	NODE_TYPE_CENTER  NODE_TYPE = 1
	NODE_TYPE_GAME    NODE_TYPE = 2
	NODE_TYPE_GATE    NODE_TYPE = 3
	NODE_TYPE_LOGIN   NODE_TYPE = 4
	NODE_TYPE_CLIENT  NODE_TYPE = 5
)

var NODE_TYPE_name = map[int32]string{
	0: "MACHINE",
	1: "CENTER",
	2: "GAME",
	3: "GATE",
	4: "LOGIN",
	5: "CLIENT",
}
var NODE_TYPE_value = map[string]int32{
	"MACHINE": 0,
	"CENTER":  1,
	"GAME":    2,
	"GATE":    3,
	"LOGIN":   4,
	"CLIENT":  5,
}

func (x NODE_TYPE) String() string {
	return proto.EnumName(NODE_TYPE_name, int32(x))
}
func (NODE_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type NODE_STATU int32

const (
	NODE_STATU_NOT_READY NODE_STATU = 0
	NODE_STATU_READY     NODE_STATU = 1
	NODE_STATU_OFF_LINE  NODE_STATU = 2
)

var NODE_STATU_name = map[int32]string{
	0: "NOT_READY",
	1: "READY",
	2: "OFF_LINE",
}
var NODE_STATU_value = map[string]int32{
	"NOT_READY": 0,
	"READY":     1,
	"OFF_LINE":  2,
}

func (x NODE_STATU) String() string {
	return proto.EnumName(NODE_STATU_name, int32(x))
}
func (NODE_STATU) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterEnum("pb.MsgID", MsgID_name, MsgID_value)
	proto.RegisterEnum("pb.NODE_TYPE", NODE_TYPE_name, NODE_TYPE_value)
	proto.RegisterEnum("pb.NODE_STATU", NODE_STATU_name, NODE_STATU_value)
}

func init() { proto.RegisterFile("define.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 206 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0x4d, 0x4b, 0x03, 0x31,
	0x10, 0x86, 0x77, 0x63, 0xb7, 0xb6, 0x63, 0x85, 0x61, 0xc0, 0x83, 0x7f, 0x61, 0x0f, 0x5e, 0xf4,
	0x0f, 0x84, 0xcd, 0xec, 0x1a, 0xcd, 0x87, 0xa6, 0xa3, 0xd2, 0x53, 0xa0, 0x58, 0xc5, 0x8b, 0x2d,
	0xea, 0xff, 0x47, 0x92, 0x5e, 0x7b, 0x7b, 0x98, 0x8f, 0xe7, 0xe5, 0x85, 0xd5, 0xfb, 0xee, 0xe3,
	0xeb, 0x7b, 0x77, 0x73, 0xf8, 0xd9, 0xff, 0xed, 0x49, 0x1d, 0xb6, 0xfd, 0x03, 0x74, 0xfe, 0xf7,
	0xd3, 0x1a, 0xba, 0x80, 0x73, 0x1b, 0x5e, 0xb5, 0xb3, 0x06, 0x1b, 0xba, 0x86, 0xab, 0xf1, 0xcd,
	0xe7, 0x10, 0x0d, 0xe7, 0xc4, 0x93, 0x5d, 0x0b, 0xa7, 0x9c, 0xf8, 0x19, 0xdb, 0xd3, 0x2b, 0x3d,
	0x3c, 0xa2, 0xea, 0x23, 0x2c, 0xeb, 0x58, 0x36, 0x4f, 0x5c, 0x7c, 0x5e, 0x0f, 0xf7, 0x36, 0x30,
	0x36, 0x04, 0x30, 0x1f, 0x38, 0x08, 0x27, 0x6c, 0x69, 0x01, 0xb3, 0x49, 0x7b, 0x46, 0x75, 0x24,
	0x61, 0x3c, 0xa3, 0x25, 0x74, 0x2e, 0x4e, 0x36, 0xe0, 0xac, 0x9e, 0x3a, 0xcb, 0x41, 0xb0, 0xeb,
	0xef, 0x00, 0xaa, 0x70, 0x2d, 0x5a, 0x5e, 0xe8, 0xb2, 0xe8, 0x25, 0x27, 0xd6, 0x66, 0x83, 0x4d,
	0xf9, 0x39, 0x62, 0x4b, 0x2b, 0x58, 0xc4, 0x71, 0xcc, 0xae, 0x84, 0xa9, 0xed, 0xbc, 0xb6, 0xbb,
	0xfd, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x7a, 0xf4, 0x33, 0xe2, 0xed, 0x00, 0x00, 0x00,
}
